function searchIndexOfObjInArr(e,t){if(!e||0==e.length)return-1;for(var i=0;i<e.length;i++)if(e[i].label==t)return i}angular.module("ivh.treeview",[]),angular.module("ivh.treeview").directive("ivhTreeviewCheckboxHelper",[function(){"use strict";return{restrict:"A",scope:{node:"=ivhTreeviewCheckboxHelper"},require:"^ivhTreeview",link:function(e,i,t,n){var r=e.node,a=n.opts(),o=a.indeterminateAttribute,l=a.selectedAttribute;e.isSelected=r[l],e.trvw=n,e.resolveIndeterminateClick=function(e){e.selectedNotAllOverlaysWithThisCategory=!1,e[o]},e.$watch("node."+l,function(e,t){}),e.$watch("node."+o,function(e,t){i.find("input").prop("indeterminate",e)})},template:["<label",'for="ivh-treeview-checkbox-{{node._id}}"','class="ivh-treeview-checkbox"',"ng-class=\"{'category-selected': node.selected, 'category-part-selected': node.selectedNotAllOverlaysWithThisCategory }\">","</label>",'<input type="checkbox"','class="ivh-treeview-checkbox"','ng-model="isSelected"','id="ivh-treeview-checkbox-{{node._id}}"','ng-click="resolveIndeterminateClick(node)"'," />"].join("\n")}}]),angular.module("ivh.treeview").directive("ivhTreeviewCheckbox",[function(){"use strict";return{restrict:"AE",require:"^ivhTreeview",template:'<span ivh-treeview-checkbox-helper="node" class="ivh-treeview-checkbox-container"></span>'}}]),angular.module("ivh.treeview").directive("ivhTreeviewChildren",function(){"use strict";return{restrict:"AE",require:"^ivhTreeviewNode",template:['<ul ng-if="getChildren().length" class="ivh-treeview">','<li ng-repeat="child in getChildren()"','ng-hide="trvw.hasFilter() && !trvw.isVisible(child)"','class="ivh-treeview-node"',"ng-class=\"{'ivh-treeview-node-collapsed': !child.expanded && !trvw.isLeaf(child)}\"",'ivh-treeview-node="child"','ivh-treeview-depth="childDepth">',"</li>","</ul>"].join("\n")}}),angular.module("ivh.treeview").directive("ivhTreeviewNode",["ivhTreeviewCompiler",function(t){"use strict";return{restrict:"A",scope:{node:"=ivhTreeviewNode",depth:"=ivhTreeviewDepth"},require:"^ivhTreeview",compile:function(e){return t.compile(e,function(e,t,i,n){var r=e.node,a=e.getChildren=function(){return n.children(r)};e.trvw=n,e.childDepth=e.depth+1,n.isExpanded(r)||n.expand(r,n.isInitiallyExpanded(e.depth)),e.$watch(function(){return 0<a().length},function(e){e?t.removeClass("ivh-treeview-node-leaf"):t.addClass("ivh-treeview-node-leaf")})})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewToggle",[function(){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(t,e,i,n){var r=t.node;e.addClass("ivh-treeview-toggle"),e.bind("click",function(e){r.expanded=!r.expanded,n.isLeaf(r)?t.$apply(function(){n.onToggle(r,e)}):t.$apply(function(){n.toggleExpanded(r),n.onToggle(r,e)})})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewLabel",[function(){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(i,e,t,n){var r=i.node;e.addClass("ivh-treeview-label"),r.isOverlayTypeCategory&&e.parent().addClass("type_category_filter"),e.bind("click",function(e){var t;"INPUT"!==(e.toElement||e.target).tagName&&(n.isMultiselect()||(t=angular.element(document.getElementsByClassName("selected-category")))&&t.removeClass("selected-category"),r.isSelected=!r.isSelected,r.selected=!r.selected,r.selectedNotAllOverlaysWithThisCategory=!1,e.toElement?e.toElement.classList.add("selected-category"):e.target&&e.target.classList.add("selected-category"),n.isLeaf(r),i.$apply(function(){n.onToggle(r,e)}))})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewMenu",[function(){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(t,e,i,n){var r=t.node;e.addClass("ivh-treeview-menu"),e.bind("click",function(e){t.$apply(function(){n.onMenu(r)})})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewRemove",["$http","$rootScope","$mdDialog","$timeout",function(o,l,c,d){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(i,e,t,n){var a=i.node;e.bind("click",function(){var e='Are you sure you want to delete the "'+(a=i.node).label+'" category?',r="All overlays currently assigned to this category will unassigned",t=c.confirm({onShowing:function(){d(function(){var e=angular.element(document.querySelector("md-dialog")),t=e.find("md-dialog-actions"),i=t.children()[0],n=t.children()[1];angular.element(e).addClass("confirm_delete_category_dialog"),angular.element(n).addClass("confirm_category_btn"),angular.element(i).addClass("cancel_category_btn"),angular.element(t).addClass("grey_confirm_background"),angular.element(e).css({display:"flex"}),""==angular.element(document.querySelector(".confirm_delete_category_dialog p")).text()&&angular.element(document.querySelector(".confirm_delete_category_dialog p")).text(r)})}}).title(e).textContent(r).ariaLabel(e).ok("Delete Category").cancel("Cancel");c.show(t).then(function(){o.delete("/api/overlaycategories/"+a._id).then(function(e){l.updateCategory(!0)},function(e){})},function(){}),i.$apply(function(){n.onMenu(a)})})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewRename",["$http","$compile","$rootScope",function(c,d,u){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(i,e,t,n){var r=i.node,a=!1,o=CSS.escape(n.getNodeHash(i.node)+"_"+r.label.replace(" ","-")),l='<form id="renameForm" style="margin-left: 20px;" ng-submit="rename()"><input type="text" autofocus placeholder=" Enter Category Name" ng-model="categoryUpdate" class="enter-category-name" ng-blur="cancelRename(\''+o+'\')" maxlength="24"/><p ng-if="!error" class="new_category_comment">Press enter to add the category <br> 24 characters max.</p><p ng-if="error" class="new_category_comment_error">{{error}}</p></form>';i.cancelRename=function(e){document.getElementById("renameForm")&&(angular.element(angular.element(document.getElementById("tree_node_"+e))[0].parentElement).children().removeAttr("style"),document.getElementById("renameForm").remove())},i.rename=function(){!0!==a&&((r=function(){if(i.node._id)return i.node;i.node=i.$parent.$parent.$parent.$parent.node;var e=i.$parent.node,t=searchIndexOfObjInArr(i.node.children,e.label);return i.node.children[t]}()).isSelected&&delete r.isSelected,r.renamedValue=r.label,r.label=i.categoryUpdate,i.error="",a=!0,c.put("/api/overlaycategories/"+r._id,r).then(function(){a=!1,u.updateCategory(!0)},function(e){r.label=r.renamedValue,a=!1,i.error=e.data&&e.data.message?e.data.message:"Error"}))},e.bind("click",function(){i.categoryUpdate=r.label,angular.element(angular.element(document.querySelector(".library_categories  #tree_node_"+o))[0].parentElement).children().css({display:"none"}),angular.element(document.querySelector(".library_categories #tree_node_"+o)).after(d(l)(i)),i.$apply(function(){n.onMenu(r)})})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewAddSubcategory",["$http","$compile","$rootScope",function(o,l,c){"use strict";return{restrict:"A",require:"^ivhTreeview",link:function(i,e,t,n){var r=i.node,a=!1;i.addSubcategory=function(){var e;void 0!==i.subCategory&&!1===a&&(a=!0,e={parents:[r.label],label:i.subCategory},o.post("/api/overlaycategories/",e).then(function(){c.updateCategory(!0),i.error="",a=!1,i.subCategory=void 0},function(e){a=!1,i.error=e.data&&e.data.message?e.data.message:"Error"}))},i.cancel=function(){document.getElementById("addSubcategoryForm")&&(document.getElementById("addSubcategoryForm").remove(),i.subCategory="")},e.bind("click",function(){var e,t;document.getElementById("addSubcategoryForm")||(i.error="",i.categoryUpdate=r.label,e=CSS.escape(n.getNodeHash(i.node)+"_"+r.label.replace(" ","-")),t=angular.element(angular.element(document.querySelector(".library_categories #tree_node_"+e).parentElement.parentElement)),angular.element(t[t.length-1]).append(l('<form id="addSubcategoryForm" style="margin-left: 20px; margin-top: 10px;" ng-submit="addSubcategory()"><input type="text" autofocus placeholder=" Enter Category Name" ng-model="subCategory" class="enter-category-name" ng-blur="cancel()" maxlength="24"/><p ng-hide="error" class="new_category_comment">Press enter to add the category <br> 24 characters max.</p><p ng-show="error" class="new_category_comment_error">{{error}}</p></form>')(i)),i.$apply(function(){n.onMenu(r)}))})}}}]),angular.module("ivh.treeview").directive("ivhTreeviewTwistie",["$compile","ivhTreeviewOptions",function(c,e){"use strict";var d=e();return{restrict:"A",require:"^ivhTreeview",template:['<span class="ivh-treeview-twistie">','<span class="ivh-treeview-twistie-collapsed">',d.twistieCollapsedTpl,"</span>",'<span class="ivh-treeview-twistie-expanded">',d.twistieExpandedTpl,"</span>",'<span class="ivh-treeview-twistie-leaf">',d.twistieLeafTpl,"</span>","</span>"].join("\n"),link:function(a,e,t,i){var o,l;i.hasLocalTwistieTpls&&(o=i.opts(),l=e.children().eq(0).children(),angular.forEach(["twistieCollapsedTpl","twistieExpandedTpl","twistieLeafTpl"],function(e,t){var i,n=o[e],r=d[e];n&&n!==r&&("<"===n.substr(0,1)&&">"===n.substr(-1,1)||(n="<span>"+n+"</span>"),i=c(n)(a),l.eq(t).html("").append(i))}))}}}]),angular.module("ivh.treeview").directive("ivhTreeview",["ivhTreeviewMgr",function(u){"use strict";return{restrict:"A",transclude:!0,scope:{root:"=ivhTreeview",childrenAttribute:"=ivhTreeviewChildrenAttribute",defaultSelectedState:"=ivhTreeviewDefaultSelectedState",expandToDepth:"=ivhTreeviewExpandToDepth",idAttribute:"=ivhTreeviewIdAttribute",indeterminateAttribute:"=ivhTreeviewIndeterminateAttribute",expandedAttribute:"=ivhTreeviewExpandedAttribute",labelAttribute:"=ivhTreeviewLabelAttribute",nodeTpl:"=ivhTreeviewNodeTpl",selectedAttribute:"=ivhTreeviewSelectedAttribute",onCbChange:"&ivhTreeviewOnCbChange",onToggle:"&ivhTreeviewOnToggle",onMenu:"&ivhTreeviewOnMenu",twistieCollapsedTpl:"=ivhTreeviewTwistieCollapsedTpl",twistieExpandedTpl:"=ivhTreeviewTwistieExpandedTpl",twistieLeafTpl:"=ivhTreeviewTwistieLeafTpl",useCheckboxes:"=ivhTreeviewUseCheckboxes",hideNodeCount:"=hideNodeCount",validate:"=ivhTreeviewValidate",visibleAttribute:"=ivhTreeviewVisibleAttribute",isMultiselect:"=ivhTreeviewMultiselect",userOptions:"=ivhTreeviewOptions",filter:"=ivhTreeviewFilter"},controllerAs:"trvw",controller:["$scope","$element","$attrs","$transclude","ivhTreeviewOptions","filterFilter",function(r,e,i,t,n,a){var o=angular,l=this,c=o.extend({},n(),r.userOptions);o.forEach(["childrenAttribute","defaultSelectedState","expandToDepth","idAttribute","indeterminateAttribute","expandedAttribute","labelAttribute","nodeTpl","selectedAttribute","twistieCollapsedTpl","twistieExpandedTpl","twistieLeafTpl","useCheckboxes","hideNodeCount","validate","visibleAttribute","isMultiselect"],function(e){o.isDefined(r[e])&&(c[e]=r[e])});o.forEach(["onCbChange","onToggle","onMenu"],function(e){var t;i["ivhTreeview"+(t=e).charAt(0).toUpperCase()+t.slice(1)]&&(c[e]=r[e])}),t(function(e,t){var i="";angular.forEach(e,function(e){i+=(e.innerHTML||"").trim()}),i.length&&(c.nodeTpl=i)}),l.opts=function(){return c};var d=r.userOptions||{};l.hasLocalTwistieTpls=!!(d.twistieCollapsedTpl||d.twistieExpandedTpl||d.twistieLeafTpl||r.twistieCollapsedTpl||r.twistieExpandedTpl||r.twistieLeafTpl),l.children=function(e){var t=e[c.childrenAttribute];return o.isArray(t)?t:[]},l.label=function(e){return e[c.labelAttribute]},l.count=function(e){if(e&&e.count&&!l.hideNodeCount())return"("+(e&&e.count?e.count.length:0)+")"},l.getClass=function(e){var t="";return(e.selected||e.selectedNotAllOverlaysWithThisCategory)&&(t+=" selected-category"),e.class&&(t+=" "+e.class),t},l.getNodeHash=function(e){return e.$$hashKey?e.$$hashKey:""},l.hasFilter=function(){return o.isDefined(r.filter)},l.getFilter=function(){return r.filter||""},l.isVisible=function(e){var t=l.getFilter();if(!t||a([e],t).length)return!0;if("object"==typeof t||"function"==typeof t)for(var i=l.children(e),n=i.length;n--;)if(l.isVisible(i[n]))return!0;return!1},l.useCheckboxes=function(){return c.useCheckboxes},l.hideNodeCount=function(){return c.hideNodeCount},l.isMultiselect=function(){return c.isMultiselect},l.select=function(e,t){u.select(r.root,e,c,t),l.onCbChange(e,t)},l.isSelected=function(e){return e[c.selectedAttribute]},l.toggleSelected=function(e){var t=!e[c.selectedAttribute];l.select(e,t)},l.expand=function(e,t){u.expand(r.root,e,c,t)},l.isExpanded=function(e){return e[c.expandedAttribute]},l.toggleExpanded=function(e){l.expand(e,!l.isExpanded(e))},l.isInitiallyExpanded=function(e){return e<(-1===c.expandToDepth?1/0:c.expandToDepth)},l.isLeaf=function(e){return 0===l.children(e).length},l.getNodeTpl=function(){return c.nodeTpl},l.root=function(){return r.root},l.onToggle=function(e,t){var i,n=t.toElement||t.target;c.onToggle&&!n.classList.contains("glyphicon")&&(i={ivhNode:e,ivhIsExpanded:l.isExpanded(e),ivhTree:r.root},c.onToggle(i))},l.onMenu=function(e){var t;c.onMenu&&(t={ivhNode:e,ivhIsExpanded:l.isExpanded(e),ivhTree:r.root},c.onMenu(t))},l.onCbChange=function(e,t){var i;c.onCbChange&&(i={ivhNode:e,ivhIsSelected:t,ivhTree:r.root},c.onCbChange(i))}}],link:function(e,t,i){var n=e.trvw.opts();n.validate&&u.validate(e.root,n)},template:['<ul class="ivh-treeview">','<li ng-repeat="child in root | ivhTreeviewAsArray"','ng-hide="trvw.hasFilter() && !trvw.isVisible(child)"','class="ivh-treeview-node"',"ng-class=\"{'ivh-treeview-node-collapsed': !child.expanded && !trvw.isLeaf(child)}\"",'ivh-treeview-node="child"','ivh-treeview-depth="0">',"</li>","</ul>"].join("\n")}}]),angular.module("ivh.treeview").filter("ivhTreeviewAsArray",function(){"use strict";return function(e){return!angular.isArray(e)&&angular.isObject(e)?[e]:e}}),angular.module("ivh.treeview").factory("ivhTreeviewBfs",["ivhTreeviewOptions",function(u){"use strict";var s=angular;return function(e,t,i){2===arguments.length&&s.isFunction(t)&&(i=t,t={}),t=angular.extend({},u(),t),i=i||s.noop;for(var n,r,a,o,l=[],c=t.childrenAttribute,d=s.isArray(e)?(s.forEach(e,function(e){l.push([e,[]])}),l.shift()):[e,[]];d;){if(!1!==i(n=d[0],r=d[1])&&n[c]&&s.isArray(n[c]))for(o=n[c].length,a=0;a<o;a++)l.push([n[c][a],[n].concat(r)]);d=l.shift()}}}]),angular.module("ivh.treeview").factory("ivhTreeviewCompiler",["$compile",function(o){"use strict";return{compile:function(e,r){var a;return angular.isFunction(r)&&(r={post:r}),{pre:r&&r.pre?r.pre:null,post:function(e,t,i,n){(a=a||o(n.getNodeTpl()))(e,function(e){t.append(e)}),r&&r.post&&r.post.apply(null,arguments)}}}}}]),angular.module("ivh.treeview").factory("ivhTreeviewMgr",["ivhTreeviewOptions","ivhTreeviewBfs",function(e,d){"use strict";function l(e,i,t,n){var r=h(i),a=!0,o=t.idAttribute,l=null,c=[];return d(e,t,function(e,t){return a&&(r?i===e[o]:i===e)&&(a=!1,l=e,c=t),a}),n(l,c)}var u=angular,s=e(),v={},h=function(e){return u.isString(e)||u.isNumber(e)};return v.select=function(e,n,r,a){2<arguments.length&&"boolean"==typeof r&&(a=r,r={}),r=u.extend({},s,r),a=!u.isDefined(a)||a;var o=h(n),l=!0,c=r.idAttribute;return d(e,r,function(e,t){var i;return l&&(o?n===e[c]:n===e)&&(l=!1,i=a?function(e){e[this.selectedAttribute]=!0,e[this.indeterminateAttribute]=!1}.bind(r):function(e){e[this.selectedAttribute]=!1,e[this.indeterminateAttribute]=!1}.bind(r),d(e,r,i),u.forEach(t,function(e){}.bind(r))),l}),v},v.selectAll=function(e,t,i){1<arguments.length&&"boolean"==typeof t&&(i=t,t={}),t=u.extend({},s,t),i=!u.isDefined(i)||i;var n=t.selectedAttribute,r=t.indeterminateAttribute;return d(e,t,function(e){e[n]=i,e[r]=!1}),v},v.selectEach=function(t,e,i,n){return u.forEach(e,function(e){v.select(t,e,i,n)}),v},v.deselect=function(e,t,i){return v.select(e,t,i,!1)},v.deselectAll=function(e,t){return v.selectAll(e,t,!1)},v.deselectEach=function(e,t,i){return v.selectEach(e,t,i,!1)},v.validate=function(e,t,i){if(!e)return v;1<arguments.length&&"boolean"==typeof t&&(i=t,t={}),t=u.extend({},s,t),i=u.isDefined(i)?i:t.defaultSelectedState;var n=t.selectedAttribute,r=t.indeterminateAttribute;return d(e,t,function(e,t){return u.isDefined(e[n])&&e[n]!==i?(e[n]=!0,!(e[r]=!0)):(e[n]=i,void(e[r]=!1))}),v},v.expand=function(e,t,i,n){2<arguments.length&&"boolean"==typeof i&&(n=i,i={}),i=u.extend({},s,i),n=!u.isDefined(n)||n;var r=h(t),a=i.expandedAttribute;return r?l(e,t,i,function(e,t){return e[a]=n,v}):(t[a]=n,v)},v.expandRecursive=function(e,t,i,n){2<arguments.length&&"boolean"==typeof i&&(n=i,i={}),t=u.isDefined(t)?t:e,i=u.extend({},s,i),n=!u.isDefined(n)||n;var r,a=h(t),o=i.expandedAttribute;return a?l(e,t,i,function(e,t){r=e}):r=t,r&&d(r,i,function(e,t){e[o]=n}),v},v.collapse=function(e,t,i){return v.expand(e,t,i,!1)},v.collapseRecursive=function(e,t,i,n){return v.expandRecursive(e,t,i,!1)},v.expandTo=function(e,t,i,n){2<arguments.length&&"boolean"==typeof i&&(n=i,i={}),i=u.extend({},s,i),n=!u.isDefined(n)||n;function r(e){e[a]=n}var a=i.expandedAttribute;return l(e,t,i,function(e,t){return u.forEach(t,r),v})},v.collapseParents=function(e,t,i){return v.expandTo(e,t,i,!1)},v}]),angular.module("ivh.treeview").provider("ivhTreeviewOptions",function(){"use strict";var t={idAttribute:"id",labelAttribute:"label",childrenAttribute:"children",selectedAttribute:"selected",expandToDepth:0,useCheckboxes:!0,hideNodeCount:!1,multiselect:!1,validate:!0,indeterminateAttribute:"__ivhTreeviewIndeterminate",expandedAttribute:"__ivhTreeviewExpanded",defaultSelectedState:!0,twistieExpandedTpl:"(-)",twistieCollapsedTpl:"(+)",twistieLeafTpl:"o",nodeTpl:['<div class="ivh-treeview-node-content" title="{{trvw.label(node)}}" >',"<span ivh-treeview-toggle>",'<span class="ivh-treeview-twistie-wrapper" ivh-treeview-twistie></span>',"</span>",'<span class="ivh-treeview-checkbox-wrapper" ng-if="trvw.useCheckboxes()"',"ivh-treeview-checkbox>","</span>","<span class=\"ivh-treeview-node-label\" ivh-treeview-label id=\"tree_node_{{trvw.label(node).replace(' ','-')}}\">","{{trvw.label(node)}}","</span>",'<span class="ivh-treeview-node-menu" ivh-treeview-menu style="float:right;" ><md-icon>more_vert</md-icon>',"</span>","<div ivh-treeview-children></div>","</div>"].join("\n")};this.set=function(e){angular.extend(t,e)},this.$get=function(){return function(){return angular.copy(t)}}});